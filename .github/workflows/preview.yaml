name: Publish Preview Extension

on:
  push:
    branches:
      - preview

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
          - os: windows-latest
            platform: win32
            arch: arm64
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: armhf
            npm_config_arch: arm
          - os: ubuntu-latest
            platform: alpine
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_config_arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      # 1. Check-out repository
      - name: Check-out repository
        uses: actions/checkout@v4

      # 2. Install npm dependencies
      - name: Use Node.js 19.0.0
        uses: actions/setup-node@v4
        with:
          node-version: 19.0.0

      - name: Cache extension node_modules
        uses: actions/cache@v3
        with:
          path: extensions/vscode/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('extensions/vscode/package-lock.json') }}

      - name: Cache core node_modules
        uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('core/package-lock.json') }}

      - name: Cache gui node_modules
        uses: actions/cache@v3
        with:
          path: gui/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('gui/package-lock.json') }}

      - name: Install global Dependencies
        run: |
          npm install -g cargo-cp-artifact

      - name: Install extension Dependencies
        run: |
          cd extensions/vscode
          npm ci
        env:
          # https://github.com/microsoft/vscode-ripgrep/issues/9#issuecomment-643965333
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Install gui Dependencies
        run: |
          cd gui
          npm ci --legacy-peer-deps

      - name: Install Core Dependencies
        run: |
          cd core
          npm ci --legacy-peer-deps

      # 2.5. Pre package
      - name: Make the out/node_modules directory
        run: |
          cd extensions/vscode
          mkdir out
          cd out
          mkdir node_modules

      - name: Set var for environment info
        shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV

      - name: Prepackage the extension
        run: |
          cd extensions/vscode
          npm run prepackage -- --target ${{ env.target }}

      # 3. Run tests for the extension

      # - name: Install Xvfb for Linux and run tests
      #   run: |
      #     sudo apt-get install -y xvfb # Install Xvfb
      #     Xvfb :99 & # Start Xvfb
      #     export DISPLAY=:99 # Export the display number to the environment
      #     cd extensions/vscode
      #     npm run test
      #   if: matrix.os == 'ubuntu-latest'

      # - name: Run extension tests
      #   run: |
      #     cd extensions/vscode
      #     npm run test
      #   if: matrix.os != 'ubuntu-latest'

      # 4. Package the extension
      - name: Re-install esbuild
        run: |
          cd extensions/vscode
          npm install -f esbuild

      - name: Package the extension
        run: cd extensions/vscode && npx vsce package --pre-release --target ${{ env.target }}

      # 5. Upload the .vsix as an artifact
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.target }}
          path: "extensions/vscode/*.vsix"

      # 6. Upload continue.log as an artifact for debugging of the workflow
      - name: Upload continue.log
        uses: actions/upload-artifact@v2
        with:
          name: continue-log
          path: /home/runner/.continue/continue.log
        if: always()

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      # 0. Setup git
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Pull latest changes
        run: git pull origin preview

      # 1. Download the artifacts
      - uses: actions/download-artifact@v3

      # 2. Publish the extension to VS Code Marketplace
      - name: Publish to VS Code Marketplace
        run: |
          cd extensions/vscode
          npx vsce publish --pre-release --packagePath ../../alpine-x64/*.vsix ../../darwin-arm64/*.vsix ../../darwin-x64/*.vsix ../../linux-arm64/*.vsix ../../linux-armhf/*.vsix ../../linux-x64/*.vsix ../../win32-x64/*.vsix ../../win32-arm64/*.vsix
        env:
          VSCE_PAT: ${{ secrets.VSCE_TOKEN }}

      # 3. Publish the extension to Open VSX Registry
      - name: Publish (Open VSX Registry)
        run: |
          cd extensions/vscode
          npx ovsx publish --pre-release -p ${{ secrets.VSX_REGISTRY_TOKEN }} --packagePath ../../alpine-x64/*.vsix ../../darwin-arm64/*.vsix ../../darwin-x64/*.vsix ../../linux-arm64/*.vsix ../../linux-armhf/*.vsix ../../linux-x64/*.vsix ../../win32-x64/*.vsix ../../win32-arm64/*.vsix

      # 4. Update the package.json version and push changes
      - name: Update version in package.json
        run: |
          cd extensions/vscode
          npm version patch

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "ðŸ’š Update package.json version [skip ci]"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
